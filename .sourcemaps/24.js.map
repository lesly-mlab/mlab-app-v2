{"version":3,"sources":["../../src/pages/infographic-codetribe/infographic-codetribe.module.ts","../../src/pages/infographic-codetribe/infographic-codetribe.ts"],"names":[],"mappings":"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","file":"24.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { InfographicCodetribePage } from './infographic-codetribe';\nimport { ChartModule } from 'angular2-chartjs';\n\n@NgModule({\n  declarations: [\n    InfographicCodetribePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(InfographicCodetribePage),\n    ChartModule\n  ],\n})\nexport class InfographicCodetribePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/infographic-codetribe/infographic-codetribe.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport * as CanvasJS from '../../app/canvasjs.min';\nimport { data } from '../../app/app.values';\n\n/**\n * Generated class for the InfographicCodetribePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-infographic-codetribe',\n  templateUrl: 'infographic-codetribe.html',\n})\nexport class InfographicCodetribePage {\n  students\n  interval\n  data1 = {}\n  data2 = {}\n  options = {\n    legend: {\n      display: false\n  }\n  }\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    this.students = navParams.get('students')\n  }\n\n  ionViewDidLoad() {\n    // let chart = new CanvasJS.Chart(\"chartContainer\", {\n    //   animationEnabled: true,\n    //   data: [{\n    //     type: \"pie\",\n    //     startAngle: 0,\n    //     yValueFormatString: \"##0\\\"%\\\"\",\n    //     indexLabel: \"{label} {y}\",\n    //     dataPoints: [\n    //       { y: (this.students.female / this.students.total) * 100, label: \"Startup\" },\n    //       { y: (this.students.male / this.students.total) * 100, label: \"Full Time\" }\n    //     ]\n    //   }]\n    // });\n\n    // chart.render();\n\n    // chart = new CanvasJS.Chart(\"chartContainer2\", {\n    //   animationEnabled: true,\n    //   data: [{\n    //     type: \"pie\",\n    //     startAngle: 0,\n    //     yValueFormatString: \"##0\\\"%\\\"\",\n    //     // indexLabel: \"{label} {y}\",\n    //     dataPoints: [\n    //       { y: (this.students.male / this.students.total) * 100, label: \"Male\" },\n    //       { y: (this.students.female / this.students.total) * 100, label: \"Female\" },\n    //       { y: (this.students.other / this.students.total) * 100, label: \"Other\" }\n    //     ]\n    //   }]\n    // });\n    // chart.render();\n\n    let total = this.students.employment.startups + this.students.employment.jobs\n\n    // if (total > 0) {\n    // chart = new CanvasJS.Chart(\"chartContainer3\", {\n    //   animationEnabled: true,\n    //   data: [{\n    //     type: \"pie\",\n    //     startAngle: 0,\n    //     yValueFormatString: \"##0\\\"%\\\"\",\n    //     indexLabel: \"{label} {y}\",\n    //     dataPoints: [\n    //       { y: (this.students.employment.startups / total) * 100, label: \"Startups\" },\n    //       { y: (this.students.employment.jobs / total) * 100, label: \"Jobs\" }\n    //     ]\n    //   }]\n    // });\n    // } else {\n    //     chart = new CanvasJS.Chart(\"chartContainer3\", {\n    //       animationEnabled: true,\n    //       data: [{\n    //         type: \"pie\",\n    //         startAngle: 0,\n    //         yValueFormatString: \"##0\\\"%\\\"\",\n    //         indexLabel: \"{label} {y}\",\n    //         dataPoints: [\n    //           { y: 0, label: \"Startups\" },\n    //           { y: 0, label: \"Jobs\" }\n    //         ]\n    //       }]\n    //     });\n    // }\n    // chart.render();\n\n    this.data1 = {\n      datasets: [\n        {\n          data: [Math.round((this.students.male / this.students.total) * 100) ,\n          Math.round((this.students.female / this.students.total) * 100) ,\n          Math.round((this.students.other / this.students.total) * 100)],\n          backgroundColor: [\n            '#14676b',\n            '#072f30',\n            '#95d83d'\n            ]\n        }\n      ],\n      labels: ['Male', 'Female', 'Other']\n    }\n\n    this.data2 = {\n        datasets: [\n          {\n            data: [Math.round((this.students.female / this.students.total) * 100),\n              Math.round((this.students.male / this.students.total) * 100),\n              Math.round((this.students.other / this.students.total) * 100)],\n            backgroundColor: [\n              '#14676b',\n              '#072f30',\n              '#95d83d'\n              ]\n          }\n        ],\n        labels: ['Male', 'Female', 'Other']\n      }\n  }\n\n  ionViewDidEnter() {\n    this.interval = setInterval(() => {\n      this.findCanvases()\n    }, 200)\n  }\n\n  findCanvases() {\n    let canvases = document.getElementsByTagName(\"canvas\")\n    for (let i = 0; i < canvases.length; i++) { \n      let canvas = canvases[i]\n      this.removeWatermarks(canvas)\n    }\n  }\n\n  removeWatermarks(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"White\";\n    ctx.fillRect(0,190,canvas.width,10);\n  }\n\n  ionViewDidLeave() {\n    clearInterval(this.interval)\n  }\n\n  showViewStudents() {\n    if (data.profile)\n      return data.profile['roleId'] == '1774522c1c6e0b65'\n\n    return false\n  }\n\n  viewStudents() {\n    this.navCtrl.push('CodetribesPage')\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/infographic-codetribe/infographic-codetribe.ts"],"sourceRoot":""}